# Generated by Django 4.1 on 2023-12-04 15:54

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Agency',
            fields=[
                ('agencyName', models.CharField(db_column='agencyName', max_length=30, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'Agency',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Album',
            fields=[
                ('albumId', models.IntegerField(db_column='albumId', primary_key=True, serialize=False)),
                ('albumName', models.CharField(db_column='albumName', max_length=30)),
                ('artistName', models.CharField(db_column='artistName', max_length=30)),
            ],
            options={
                'db_table': 'Album',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AlbumCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'AlbumCategory',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AlbumReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('star', models.IntegerField(blank=True, null=True)),
                ('content', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'AlbumReview',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Artist',
            fields=[
                ('id', models.IntegerField(auto_created=True)),
                ('artistName', models.CharField(db_column='artistName', max_length=30, primary_key=True, serialize=False)),
                ('isSolo', models.IntegerField(blank=True, db_column='isSolo', null=True)),
                ('debutedAt', models.DateTimeField(blank=True, db_column='debutedAt', null=True)),
            ],
            options={
                'db_table': 'Artist',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('categoryId', models.IntegerField(db_column='categoryId', primary_key=True, serialize=False)),
                ('category', models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                'db_table': 'Category',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Composer',
            fields=[
                ('composerId', models.IntegerField(db_column='composerId', primary_key=True, serialize=False)),
                ('composerName', models.CharField(blank=True, db_column='composerName', max_length=30, null=True)),
            ],
            options={
                'db_table': 'composer',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Lyricist',
            fields=[
                ('lyricistId', models.IntegerField(db_column='lyricistId', primary_key=True, serialize=False)),
                ('lyricistName', models.CharField(blank=True, db_column='lyricistName', max_length=30, null=True)),
            ],
            options={
                'db_table': 'Lyricist',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('memberName', models.CharField(db_column='memberName', max_length=30)),
            ],
            options={
                'db_table': 'Member',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Song',
            fields=[
                ('id', models.IntegerField(auto_created=True)),
                ('songName', models.CharField(db_column='songName', max_length=30, primary_key=True, serialize=False)),
                ('lyrics', models.TextField(blank=True, null=True)),
                ('createdAt', models.DateTimeField(blank=True, db_column='createdAt', null=True)),
            ],
            options={
                'db_table': 'Song',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SongComposer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'songComposer',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SongLyricist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'songLyricist',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SongReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('star', models.IntegerField(blank=True, null=True)),
                ('content', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'songReview',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('_id', models.CharField(db_column='_id', max_length=12, primary_key=True, serialize=False)),
                ('password', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'user',
                'managed': False,
            },
        ),
    ]
